Problem Set 3

6.3

a.	int[] a = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
b.	int[] a = {1, 1, 2, 3, 4, 5, 4, 3, 2, 1}
c.	int[] a = {2, 3, 4, 5, 4, 3, 2, 1, 0, 0}
d.	int[] a = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
e.	int[] a = {1, 3, 6, 10, 15, 19, 22, 24, 25, 25}
f.	int[] a = {1, 0, 3, 0, 5, 0, 3, 0, 1, 0}
g.	int[] a = {1, 2, 3, 4, 5, 1, 2, 3, 4, 5}
h.	int[] a = {1, 1, 2, 3, 4, 4, 3, 2, 1, 0}

6.8

a.	for (int i = 0; i < values.length; i++) {
double x = values[i];
total = total + x;
	}
b.	for (int i = 0; i < values.length; i++) {
double x = values[i];
if (x == target) {
	return true;
}
	}
c.	int i = 0;
for (int j = 0; j < values.length; j++) {
	double x = values[j];
	values[i] = 2 * x;
	i++;
}

6.21

int temp = values[0];
for (int i = 0; i < values.length; i++) {
	values[i] = values[i + 1];
}
values[values.length - 1] = temp;


6.24

int length = 0;
int tempLength = 0;
for (int i = 0; i < (values.length â€“ 1); i++){
while (values[i] = values[i+1]) {
		tempLength++;
		i++;
	}
	if (tempLength > length) {
		length = tempLength;
		tempLength = 0;
	}
}

6.26

int largestX = xValues[0]
for (int i = 1; i < xValues.length; i++) {
	if (xValues[i] > largestX) {
		largestX = xValues[i];
	}
}
int smallestX = xValues[0]
for (int i = 1; i < xValues.length; i++) {
	if (xValues[i] < smallestX) {
		smallestX = xValues[i];
	}
}
int largestY = yValues[0]
for (int i = 1; i < yValues.length; i++) {
	if (yValues[i] > largestY) {
		largestY = yValues[i];
	}
}
int smallestY = yValues[0]
for (int i = 1; i < yValues.length; i++) {
	if (yValues[i] < smallestY) {
		smallestY = yValues[i];
	}
}

The x- and y-coordinates of the smallest rectangle containing the points would be the rectangle with vertices at (smallestX, smallestY), (smallestX, largestY), (largestX, smallestY), and (largestX, largestY). The algorithms used were ones to find the minimums and maximums for both arrays in order to ensure that all points were encompassed by the rectangle.
